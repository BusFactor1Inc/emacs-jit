[ -r "/Users/burtonsamograd/emacs-jit/emacs-profile-git/src/config.in" ] || ( cd /Users/burtonsamograd/emacs-jit/emacs-profile-git && autoheader )
cd lib && /Library/Developer/CommandLineTools/usr/bin/make all                          \
	  CC='gcc' CFLAGS='-g3 -O2' CPPFLAGS='' \
	  LDFLAGS='' MAKE='/Library/Developer/CommandLineTools/usr/bin/make'
/Library/Developer/CommandLineTools/usr/bin/make  all-am
make[2]: Nothing to be done for `all-am'.
cd lib-src && /Library/Developer/CommandLineTools/usr/bin/make all                          \
	  CC='gcc' CFLAGS='-g3 -O2' CPPFLAGS='' \
	  LDFLAGS='' MAKE='/Library/Developer/CommandLineTools/usr/bin/make'
make[1]: Nothing to be done for `all'.
boot=bootstrap-emacs;                         \
	if [ ! -x "src/$boot" ]; then                                     \
	    cd src; /Library/Developer/CommandLineTools/usr/bin/make all                                    \
	      CC='gcc' CFLAGS='-g3 -O2' CPPFLAGS=''         \
	      LDFLAGS='' MAKE='/Library/Developer/CommandLineTools/usr/bin/make' BOOTSTRAPEMACS="$boot"; \
	fi;
if [ -r .bzr/checkout/dirstate ]; then 			\
	    vcswitness="`pwd`/.bzr/checkout/dirstate"; 	\
	fi; 							\
	cd src; /Library/Developer/CommandLineTools/usr/bin/make all                            \
	  CC='gcc' CFLAGS='-g3 -O2' CPPFLAGS='' \
	  LDFLAGS='' MAKE='/Library/Developer/CommandLineTools/usr/bin/make' BOOTSTRAPEMACS=""	\
	  VCSWITNESS="$vcswitness"
../lib-src/make-docfile -d /Users/burtonsamograd/emacs-jit/emacs-profile-git/src -g dispnew.o frame.o scroll.o xdisp.o menu.o  window.o charset.o coding.o category.o ccl.o character.o chartab.o bidi.o cm.o term.o terminal.o xfaces.o    emacs.o keyboard.o macros.o keymap.o sysdep.o buffer.o filelock.o insdel.o marker.o minibuf.o fileio.o dired.o cmds.o casetab.o casefiddle.o indent.o search.o regex.o undo.o alloc.o data.o doc.o editfns.o callint.o eval.o floatfns.o fns.o font.o print.o lread.o syntax.o unexmacosx.o bytecode.o process.o gnutls.o callproc.o region-cache.o sound.o atimer.o doprnt.o intervals.o textprop.o composite.o xml.o profiler.o       fontset.o fringe.o image.o nsterm.o nsfns.o nsmenu.o nsselect.o nsimage.o nsfont.o > gl-tmp
/Users/burtonsamograd/emacs-jit/emacs-profile-git/src/../build-aux/move-if-change gl-tmp globals.h
echo timestamp > gl-stamp
gcc -c  -Demacs  -I. -I/Users/burtonsamograd/emacs-jit/emacs-profile-git/src -I../lib -I/Users/burtonsamograd/emacs-jit/emacs-profile-git/src/../lib      -D_REENTRANT -I/usr/local/Cellar/librsvg/2.40.16_1/include/librsvg-2.0 -I/usr/local/Cellar/gdk-pixbuf/2.36.0_2/include/gdk-pixbuf-2.0 -I/usr/local/Cellar/libpng/1.6.25/include/libpng16 -I/usr/local/Cellar/cairo/1.14.6_1/include/cairo -I/usr/local/Cellar/glib/2.50.1/include/glib-2.0 -I/usr/local/Cellar/glib/2.50.1/lib/glib-2.0/include -I/usr/local/opt/gettext/include -I/usr/local/Cellar/pcre/8.39/include -I/usr/local/Cellar/pixman/0.34.0/include/pixman-1 -I/usr/local/Cellar/fontconfig/2.12.1_2/include -I/usr/local/opt/freetype/include/freetype2 -I/usr/local/Cellar/libpng/1.6.25/include/libpng16  -I/usr/include/libxml2       -MMD -MF deps/bytecode.d -MP  -I/usr/local/Cellar/gnutls/3.4.16/include -I/usr/local/Cellar/nettle/3.3/include -I/usr/local/Cellar/libtasn1/4.9/include   -g3 -O2 bytecode.c
In file included from bytecode.c:37:
./lisp.h:386:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
      = ARRAY_MARK_FLAG;
        ^~~~~~~~~~~~~~~
./lisp.h:385:25: note: expanded from macro 'ARRAY_MARK_FLAG'
#define ARRAY_MARK_FLAG PTRDIFF_MIN
                        ^~~~~~~~~~~
../lib/stdint.h:514:5: note: expanded from macro 'PTRDIFF_MIN'
    _STDINT_MIN (1, 64, 0l)
    ^~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
               ~~~~~~~~~~~~~~ ^
In file included from bytecode.c:37:
./lisp.h:392:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
      = PSEUDOVECTOR_FLAG;
        ^~~~~~~~~~~~~~~~~
./lisp.h:391:28: note: expanded from macro 'PSEUDOVECTOR_FLAG'
#define PSEUDOVECTOR_FLAG (PTRDIFF_MAX - PTRDIFF_MAX / 2)
                           ^~~~~~~~~~~
../lib/stdint.h:516:5: note: expanded from macro 'PTRDIFF_MAX'
    _STDINT_MAX (1, 64, 0l)
    ^~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
               ~~~~~~~~~~~~~~ ^
In file included from bytecode.c:37:
./lisp.h:392:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
      = PSEUDOVECTOR_FLAG;
        ^~~~~~~~~~~~~~~~~
./lisp.h:391:42: note: expanded from macro 'PSEUDOVECTOR_FLAG'
#define PSEUDOVECTOR_FLAG (PTRDIFF_MAX - PTRDIFF_MAX / 2)
                                         ^~~~~~~~~~~
../lib/stdint.h:516:5: note: expanded from macro 'PTRDIFF_MAX'
    _STDINT_MAX (1, 64, 0l)
    ^~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
               ~~~~~~~~~~~~~~ ^
In file included from bytecode.c:37:
./lisp.h:785:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        STRING_BYTES_BOUND;
        ^~~~~~~~~~~~~~~~~~
./lisp.h:784:58: note: expanded from macro 'STRING_BYTES_BOUND'
  ((ptrdiff_t) min (MOST_POSITIVE_FIXNUM, min (SIZE_MAX, PTRDIFF_MAX) - 1))
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
../lib/stdint.h:516:5: note: expanded from macro 'PTRDIFF_MAX'
    _STDINT_MAX (1, 64, 0l)
    ^
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
                              ^
./lisp.h:43:27: note: expanded from macro 'min'
#define min(a, b) ((a) < (b) ? (a) : (b))
                          ^
./lisp.h:43:27: note: expanded from macro 'min'
#define min(a, b) ((a) < (b) ? (a) : (b))
                          ^
./lisp.h:785:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        STRING_BYTES_BOUND;
        ^~~~~~~~~~~~~~~~~~
./lisp.h:784:58: note: expanded from macro 'STRING_BYTES_BOUND'
  ((ptrdiff_t) min (MOST_POSITIVE_FIXNUM, min (SIZE_MAX, PTRDIFF_MAX) - 1))
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
../lib/stdint.h:516:5: note: expanded from macro 'PTRDIFF_MAX'
    _STDINT_MAX (1, 64, 0l)
    ^
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
                              ^
./lisp.h:43:39: note: expanded from macro 'min'
#define min(a, b) ((a) < (b) ? (a) : (b))
                                      ^
./lisp.h:43:27: note: expanded from macro 'min'
#define min(a, b) ((a) < (b) ? (a) : (b))
                          ^
./lisp.h:785:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        STRING_BYTES_BOUND;
        ^~~~~~~~~~~~~~~~~~
./lisp.h:784:58: note: expanded from macro 'STRING_BYTES_BOUND'
  ((ptrdiff_t) min (MOST_POSITIVE_FIXNUM, min (SIZE_MAX, PTRDIFF_MAX) - 1))
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
../lib/stdint.h:516:5: note: expanded from macro 'PTRDIFF_MAX'
    _STDINT_MAX (1, 64, 0l)
    ^
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
                              ^
./lisp.h:43:27: note: expanded from macro 'min'
#define min(a, b) ((a) < (b) ? (a) : (b))
                          ^
./lisp.h:43:39: note: expanded from macro 'min'
#define min(a, b) ((a) < (b) ? (a) : (b))
                                      ^
./lisp.h:785:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        STRING_BYTES_BOUND;
        ^~~~~~~~~~~~~~~~~~
./lisp.h:784:58: note: expanded from macro 'STRING_BYTES_BOUND'
  ((ptrdiff_t) min (MOST_POSITIVE_FIXNUM, min (SIZE_MAX, PTRDIFF_MAX) - 1))
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
../lib/stdint.h:516:5: note: expanded from macro 'PTRDIFF_MAX'
    _STDINT_MAX (1, 64, 0l)
    ^
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
                              ^
./lisp.h:43:39: note: expanded from macro 'min'
#define min(a, b) ((a) < (b) ? (a) : (b))
                                      ^
./lisp.h:43:39: note: expanded from macro 'min'
#define min(a, b) ((a) < (b) ? (a) : (b))
                                      ^
./lisp.h:3009:39: warning: unknown attribute 'externally_visible' ignored [-Wunknown-attributes]
extern void debug_print (Lisp_Object) EXTERNALLY_VISIBLE;
                                      ^
./conf_post.h:195:43: note: expanded from macro 'EXTERNALLY_VISIBLE'
#define EXTERNALLY_VISIBLE __attribute__((externally_visible))
                                          ^
In file included from bytecode.c:37:
./lisp.h:3715:7: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  if (SUBRP (object))
      ^~~~~~~~~~~~~~
./lisp.h:1721:18: note: expanded from macro 'SUBRP'
#define SUBRP(x) PSEUDOVECTORP (x, PVEC_SUBR)
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1704:3: note: expanded from macro 'PSEUDOVECTORP'
  TYPED_PSEUDOVECTORP (x, vectorlike_header, code)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1714:7: note: expanded from macro 'TYPED_PSEUDOVECTORP'
   && PSEUDOVECTOR_TYPEP ((struct t *) XUNTAG (x, Lisp_Vectorlike), code))
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../lib/stdint.h:516:5: note: expanded from macro 'PTRDIFF_MAX'
    _STDINT_MAX (1, 64, 0l)
    ^~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
               ~~~~~~~~~~~~~~ ^
In file included from bytecode.c:37:
./lisp.h:3715:7: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  if (SUBRP (object))
      ^~~~~~~~~~~~~~
./lisp.h:1721:18: note: expanded from macro 'SUBRP'
#define SUBRP(x) PSEUDOVECTORP (x, PVEC_SUBR)
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1704:3: note: expanded from macro 'PSEUDOVECTORP'
  TYPED_PSEUDOVECTORP (x, vectorlike_header, code)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1714:7: note: expanded from macro 'TYPED_PSEUDOVECTORP'
   && PSEUDOVECTOR_TYPEP ((struct t *) XUNTAG (x, Lisp_Vectorlike), code))
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../lib/stdint.h:516:5: note: expanded from macro 'PTRDIFF_MAX'
    _STDINT_MAX (1, 64, 0l)
    ^~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
               ~~~~~~~~~~~~~~ ^
In file included from bytecode.c:37:
./lisp.h:3715:7: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  if (SUBRP (object))
      ^~~~~~~~~~~~~~
./lisp.h:1721:18: note: expanded from macro 'SUBRP'
#define SUBRP(x) PSEUDOVECTORP (x, PVEC_SUBR)
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1704:3: note: expanded from macro 'PSEUDOVECTORP'
  TYPED_PSEUDOVECTORP (x, vectorlike_header, code)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1714:7: note: expanded from macro 'TYPED_PSEUDOVECTORP'
   && PSEUDOVECTOR_TYPEP ((struct t *) XUNTAG (x, Lisp_Vectorlike), code))
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../lib/stdint.h:516:5: note: expanded from macro 'PTRDIFF_MAX'
    _STDINT_MAX (1, 64, 0l)
    ^~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
               ~~~~~~~~~~~~~~ ^
In file included from bytecode.c:37:
./lisp.h:3715:7: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  if (SUBRP (object))
      ^~~~~~~~~~~~~~
./lisp.h:1721:18: note: expanded from macro 'SUBRP'
#define SUBRP(x) PSEUDOVECTORP (x, PVEC_SUBR)
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1704:3: note: expanded from macro 'PSEUDOVECTORP'
  TYPED_PSEUDOVECTORP (x, vectorlike_header, code)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1714:7: note: expanded from macro 'TYPED_PSEUDOVECTORP'
   && PSEUDOVECTOR_TYPEP ((struct t *) XUNTAG (x, Lisp_Vectorlike), code))
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../lib/stdint.h:516:5: note: expanded from macro 'PTRDIFF_MAX'
    _STDINT_MAX (1, 64, 0l)
    ^~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
               ~~~~~~~~~~~~~~ ^
In file included from bytecode.c:37:
./lisp.h:3717:12: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  else if (COMPILEDP (object))
           ^~~~~~~~~~~~~~~~~~
./lisp.h:1722:22: note: expanded from macro 'COMPILEDP'
#define COMPILEDP(x) PSEUDOVECTORP (x, PVEC_COMPILED)
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1704:3: note: expanded from macro 'PSEUDOVECTORP'
  TYPED_PSEUDOVECTORP (x, vectorlike_header, code)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1714:7: note: expanded from macro 'TYPED_PSEUDOVECTORP'
   && PSEUDOVECTOR_TYPEP ((struct t *) XUNTAG (x, Lisp_Vectorlike), code))
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../lib/stdint.h:516:5: note: expanded from macro 'PTRDIFF_MAX'
    _STDINT_MAX (1, 64, 0l)
    ^~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
               ~~~~~~~~~~~~~~ ^
In file included from bytecode.c:37:
./lisp.h:3717:12: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  else if (COMPILEDP (object))
           ^~~~~~~~~~~~~~~~~~
./lisp.h:1722:22: note: expanded from macro 'COMPILEDP'
#define COMPILEDP(x) PSEUDOVECTORP (x, PVEC_COMPILED)
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1704:3: note: expanded from macro 'PSEUDOVECTORP'
  TYPED_PSEUDOVECTORP (x, vectorlike_header, code)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1714:7: note: expanded from macro 'TYPED_PSEUDOVECTORP'
   && PSEUDOVECTOR_TYPEP ((struct t *) XUNTAG (x, Lisp_Vectorlike), code))
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../lib/stdint.h:516:5: note: expanded from macro 'PTRDIFF_MAX'
    _STDINT_MAX (1, 64, 0l)
    ^~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
               ~~~~~~~~~~~~~~ ^
In file included from bytecode.c:37:
./lisp.h:3717:12: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  else if (COMPILEDP (object))
           ^~~~~~~~~~~~~~~~~~
./lisp.h:1722:22: note: expanded from macro 'COMPILEDP'
#define COMPILEDP(x) PSEUDOVECTORP (x, PVEC_COMPILED)
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1704:3: note: expanded from macro 'PSEUDOVECTORP'
  TYPED_PSEUDOVECTORP (x, vectorlike_header, code)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1714:7: note: expanded from macro 'TYPED_PSEUDOVECTORP'
   && PSEUDOVECTOR_TYPEP ((struct t *) XUNTAG (x, Lisp_Vectorlike), code))
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../lib/stdint.h:516:5: note: expanded from macro 'PTRDIFF_MAX'
    _STDINT_MAX (1, 64, 0l)
    ^~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
               ~~~~~~~~~~~~~~ ^
In file included from bytecode.c:37:
./lisp.h:3717:12: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  else if (COMPILEDP (object))
           ^~~~~~~~~~~~~~~~~~
./lisp.h:1722:22: note: expanded from macro 'COMPILEDP'
#define COMPILEDP(x) PSEUDOVECTORP (x, PVEC_COMPILED)
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1704:3: note: expanded from macro 'PSEUDOVECTORP'
  TYPED_PSEUDOVECTORP (x, vectorlike_header, code)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1714:7: note: expanded from macro 'TYPED_PSEUDOVECTORP'
   && PSEUDOVECTOR_TYPEP ((struct t *) XUNTAG (x, Lisp_Vectorlike), code))
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../lib/stdint.h:516:5: note: expanded from macro 'PTRDIFF_MAX'
    _STDINT_MAX (1, 64, 0l)
    ^~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
               ~~~~~~~~~~~~~~ ^
In file included from bytecode.c:39:
./buffer.h:1302:22: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  Lisp_Object down = CHAR_TABLE_REF (downcase_table, c);
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:938:25: note: expanded from macro 'CHAR_TABLE_REF'
  (ASCII_CHAR_P (IDX) ? CHAR_TABLE_REF_ASCII ((CT), (IDX))      \
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:902:17: note: expanded from macro 'CHAR_TABLE_REF_ASCII'
      _val = (! SUB_CHAR_TABLE_P (_tbl->ascii) ? _tbl->ascii            \
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1725:29: note: expanded from macro 'SUB_CHAR_TABLE_P'
#define SUB_CHAR_TABLE_P(x) PSEUDOVECTORP (x, PVEC_SUB_CHAR_TABLE)
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
note: (skipping 4 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../lib/stdint.h:516:5: note: expanded from macro 'PTRDIFF_MAX'
    _STDINT_MAX (1, 64, 0l)
    ^~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
               ~~~~~~~~~~~~~~ ^
In file included from bytecode.c:39:
./buffer.h:1302:22: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  Lisp_Object down = CHAR_TABLE_REF (downcase_table, c);
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:938:25: note: expanded from macro 'CHAR_TABLE_REF'
  (ASCII_CHAR_P (IDX) ? CHAR_TABLE_REF_ASCII ((CT), (IDX))      \
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:902:17: note: expanded from macro 'CHAR_TABLE_REF_ASCII'
      _val = (! SUB_CHAR_TABLE_P (_tbl->ascii) ? _tbl->ascii            \
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1725:29: note: expanded from macro 'SUB_CHAR_TABLE_P'
#define SUB_CHAR_TABLE_P(x) PSEUDOVECTORP (x, PVEC_SUB_CHAR_TABLE)
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
note: (skipping 4 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../lib/stdint.h:516:5: note: expanded from macro 'PTRDIFF_MAX'
    _STDINT_MAX (1, 64, 0l)
    ^~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
               ~~~~~~~~~~~~~~ ^
In file included from bytecode.c:39:
./buffer.h:1302:22: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  Lisp_Object down = CHAR_TABLE_REF (downcase_table, c);
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:938:25: note: expanded from macro 'CHAR_TABLE_REF'
  (ASCII_CHAR_P (IDX) ? CHAR_TABLE_REF_ASCII ((CT), (IDX))      \
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:902:17: note: expanded from macro 'CHAR_TABLE_REF_ASCII'
      _val = (! SUB_CHAR_TABLE_P (_tbl->ascii) ? _tbl->ascii            \
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1725:29: note: expanded from macro 'SUB_CHAR_TABLE_P'
#define SUB_CHAR_TABLE_P(x) PSEUDOVECTORP (x, PVEC_SUB_CHAR_TABLE)
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
note: (skipping 4 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../lib/stdint.h:516:5: note: expanded from macro 'PTRDIFF_MAX'
    _STDINT_MAX (1, 64, 0l)
    ^~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
               ~~~~~~~~~~~~~~ ^
In file included from bytecode.c:39:
./buffer.h:1302:22: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  Lisp_Object down = CHAR_TABLE_REF (downcase_table, c);
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:938:25: note: expanded from macro 'CHAR_TABLE_REF'
  (ASCII_CHAR_P (IDX) ? CHAR_TABLE_REF_ASCII ((CT), (IDX))      \
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:902:17: note: expanded from macro 'CHAR_TABLE_REF_ASCII'
      _val = (! SUB_CHAR_TABLE_P (_tbl->ascii) ? _tbl->ascii            \
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1725:29: note: expanded from macro 'SUB_CHAR_TABLE_P'
#define SUB_CHAR_TABLE_P(x) PSEUDOVECTORP (x, PVEC_SUB_CHAR_TABLE)
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
note: (skipping 4 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../lib/stdint.h:516:5: note: expanded from macro 'PTRDIFF_MAX'
    _STDINT_MAX (1, 64, 0l)
    ^~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
               ~~~~~~~~~~~~~~ ^
In file included from bytecode.c:39:
./buffer.h:1314:20: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  Lisp_Object up = CHAR_TABLE_REF (upcase_table, c);
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:938:25: note: expanded from macro 'CHAR_TABLE_REF'
  (ASCII_CHAR_P (IDX) ? CHAR_TABLE_REF_ASCII ((CT), (IDX))      \
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:902:17: note: expanded from macro 'CHAR_TABLE_REF_ASCII'
      _val = (! SUB_CHAR_TABLE_P (_tbl->ascii) ? _tbl->ascii            \
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1725:29: note: expanded from macro 'SUB_CHAR_TABLE_P'
#define SUB_CHAR_TABLE_P(x) PSEUDOVECTORP (x, PVEC_SUB_CHAR_TABLE)
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
note: (skipping 4 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../lib/stdint.h:516:5: note: expanded from macro 'PTRDIFF_MAX'
    _STDINT_MAX (1, 64, 0l)
    ^~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
               ~~~~~~~~~~~~~~ ^
In file included from bytecode.c:39:
./buffer.h:1314:20: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  Lisp_Object up = CHAR_TABLE_REF (upcase_table, c);
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:938:25: note: expanded from macro 'CHAR_TABLE_REF'
  (ASCII_CHAR_P (IDX) ? CHAR_TABLE_REF_ASCII ((CT), (IDX))      \
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:902:17: note: expanded from macro 'CHAR_TABLE_REF_ASCII'
      _val = (! SUB_CHAR_TABLE_P (_tbl->ascii) ? _tbl->ascii            \
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1725:29: note: expanded from macro 'SUB_CHAR_TABLE_P'
#define SUB_CHAR_TABLE_P(x) PSEUDOVECTORP (x, PVEC_SUB_CHAR_TABLE)
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
note: (skipping 4 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../lib/stdint.h:516:5: note: expanded from macro 'PTRDIFF_MAX'
    _STDINT_MAX (1, 64, 0l)
    ^~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
               ~~~~~~~~~~~~~~ ^
In file included from bytecode.c:39:
./buffer.h:1314:20: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  Lisp_Object up = CHAR_TABLE_REF (upcase_table, c);
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:938:25: note: expanded from macro 'CHAR_TABLE_REF'
  (ASCII_CHAR_P (IDX) ? CHAR_TABLE_REF_ASCII ((CT), (IDX))      \
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:902:17: note: expanded from macro 'CHAR_TABLE_REF_ASCII'
      _val = (! SUB_CHAR_TABLE_P (_tbl->ascii) ? _tbl->ascii            \
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1725:29: note: expanded from macro 'SUB_CHAR_TABLE_P'
#define SUB_CHAR_TABLE_P(x) PSEUDOVECTORP (x, PVEC_SUB_CHAR_TABLE)
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
note: (skipping 4 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../lib/stdint.h:516:5: note: expanded from macro 'PTRDIFF_MAX'
    _STDINT_MAX (1, 64, 0l)
    ^~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
               ~~~~~~~~~~~~~~ ^
In file included from bytecode.c:39:
./buffer.h:1314:20: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  Lisp_Object up = CHAR_TABLE_REF (upcase_table, c);
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:938:25: note: expanded from macro 'CHAR_TABLE_REF'
  (ASCII_CHAR_P (IDX) ? CHAR_TABLE_REF_ASCII ((CT), (IDX))      \
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:902:17: note: expanded from macro 'CHAR_TABLE_REF_ASCII'
      _val = (! SUB_CHAR_TABLE_P (_tbl->ascii) ? _tbl->ascii            \
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1725:29: note: expanded from macro 'SUB_CHAR_TABLE_P'
#define SUB_CHAR_TABLE_P(x) PSEUDOVECTORP (x, PVEC_SUB_CHAR_TABLE)
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
note: (skipping 4 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../lib/stdint.h:516:5: note: expanded from macro 'PTRDIFF_MAX'
    _STDINT_MAX (1, 64, 0l)
    ^~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
               ~~~~~~~~~~~~~~ ^
In file included from bytecode.c:482:
./bytecode-jit.c:84:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT_VECTOR_REF(varref)
^
./bytecode-jit.c:82:3: note: expanded from macro 'BYTECODE_JIT_VECTOR_REF'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core, Lisp_Object v)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:111:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(car)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:127:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(eq)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:134:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(memq)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:143:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(cdr)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:159:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT_VECTOR_REF(varset)
^
./bytecode-jit.c:82:3: note: expanded from macro 'BYTECODE_JIT_VECTOR_REF'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core, Lisp_Object v)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:182:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(dup)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:189:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT_VECTOR_REF(varbind)
^
./bytecode-jit.c:82:3: note: expanded from macro 'BYTECODE_JIT_VECTOR_REF'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core, Lisp_Object v)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:197:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT_OP(call)
^
./bytecode-jit.c:78:3: note: expanded from macro 'BYTECODE_JIT_OP'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core, int op)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:211:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT_OP(unbind)
^
./bytecode-jit.c:78:3: note: expanded from macro 'BYTECODE_JIT_OP'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core, int op)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:218:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(unbind_all)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:227:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(goto)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:233:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT_GOTO(gotoifnil)
^
./bytecode-jit.c:80:3: note: expanded from macro 'BYTECODE_JIT_GOTO'
  JIT_FASTCALL static int bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:246:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT_GOTO(gotoifnonnil)
^
./bytecode-jit.c:80:3: note: expanded from macro 'BYTECODE_JIT_GOTO'
  JIT_FASTCALL static int bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:259:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT_GOTO(gotoifnilelsepop)
^
./bytecode-jit.c:80:3: note: expanded from macro 'BYTECODE_JIT_GOTO'
  JIT_FASTCALL static int bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:271:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT_GOTO(gotoifnonnilelsepop)
^
./bytecode-jit.c:80:3: note: expanded from macro 'BYTECODE_JIT_GOTO'
  JIT_FASTCALL static int bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:283:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT_GOTO(Rgoto)
^
./bytecode-jit.c:80:3: note: expanded from macro 'BYTECODE_JIT_GOTO'
  JIT_FASTCALL static int bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:291:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT_GOTO(Rgotoifnil)
^
./bytecode-jit.c:80:3: note: expanded from macro 'BYTECODE_JIT_GOTO'
  JIT_FASTCALL static int bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:304:1: warning: control may reach end of non-void function [-Wreturn-type]
}
^
./bytecode-jit.c:306:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT_GOTO(Rgotoifnonnil)
^
./bytecode-jit.c:80:3: note: expanded from macro 'BYTECODE_JIT_GOTO'
  JIT_FASTCALL static int bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:321:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT_GOTO(Rgotoifnilelsepop)
^
./bytecode-jit.c:80:3: note: expanded from macro 'BYTECODE_JIT_GOTO'
  JIT_FASTCALL static int bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:335:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT_GOTO(Rgotoifnonnilelsepop)
^
./bytecode-jit.c:80:3: note: expanded from macro 'BYTECODE_JIT_GOTO'
  JIT_FASTCALL static int bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:349:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(discard)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:354:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT_VECTOR_REF(constant2)
^
./bytecode-jit.c:82:3: note: expanded from macro 'BYTECODE_JIT_VECTOR_REF'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core, Lisp_Object v)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:359:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(save_excursion)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:365:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(save_current_buffer)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:370:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(save_window_excursion)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:381:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(save_restriction)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:387:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(catch)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:396:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(unwind_protect)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:401:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(condition_case)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:411:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(temp_output_buffer_setup)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:420:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(temp_output_buffer_show)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:432:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(nth)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:449:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(symbolp)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:454:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(consp)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:459:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(stringp)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:464:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(listp)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:469:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(not)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:474:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(cons)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:481:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(list1)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:486:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(list2)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:493:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(list3)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:499:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(list4)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:505:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT_OP(listN)
^
./bytecode-jit.c:78:3: note: expanded from macro 'BYTECODE_JIT_OP'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core, int op)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:511:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(length)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:518:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(aref)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:527:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(aset)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:536:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(symbol_value)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:543:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(symbol_function)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:550:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(set)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:559:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(fset)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:568:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(get)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:577:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(substring)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:586:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(concat2)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:594:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(concat3)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:602:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(concat4)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:610:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT_OP(concatN)
^
./bytecode-jit.c:78:3: note: expanded from macro 'BYTECODE_JIT_OP'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core, int op)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:618:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(sub1)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:635:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(add1)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:652:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(eqlsign)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:672:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(gtr)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:681:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(lss)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:690:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(leq)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:699:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(geq)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:708:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(diff)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:716:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(negate)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:733:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(plus)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:741:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(max)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:749:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(min)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:757:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(mult)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:765:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(quo)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:773:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(rem)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:782:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(point)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:789:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(goto_char)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:796:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(insert)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:803:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT_OP(insertN)
^
./bytecode-jit.c:78:3: note: expanded from macro 'BYTECODE_JIT_OP'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core, int op)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:811:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(point_max)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:818:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(point_min)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:825:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(char_after)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:832:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(following_char)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:841:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(preceding_char)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:850:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(current_column)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:859:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(indent_to)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:866:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(eolp)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:871:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(eobp)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:876:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(bolp)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:881:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(bobp)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:886:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(current_buffer)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:891:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(set_buffer)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:898:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(interactive_p)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:905:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(forward_char)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:912:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(forward_word)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:919:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(skip_chars_forward)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:928:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(skip_chars_backward)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:937:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(forward_line)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:944:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(char_syntax)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:954:49: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  XSETFASTINT (_JIT_TOP, syntax_code_spec[(int) SYNTAX (c)]);
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
./syntax.h:92:21: note: expanded from macro 'SYNTAX'
     _syntax_temp = SYNTAX_ENTRY (c);                                   \
                    ^
./syntax.h:80:24: note: expanded from macro 'SYNTAX_ENTRY'
#  define SYNTAX_ENTRY SYNTAX_ENTRY_INT
                       ^
./syntax.h:84:29: note: expanded from macro 'SYNTAX_ENTRY_INT'
#define SYNTAX_ENTRY_INT(c) CHAR_TABLE_REF (CURRENT_SYNTAX_TABLE, (c))
                            ^
note: (skipping 11 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
./lisp.h:605:43: note: expanded from macro 'XSETINT'
#define XSETINT(a, b) ((a) = make_number (b))
                             ~~~~~~~~~~~~~^~
./lisp.h:467:42: note: expanded from macro 'make_number'
#define make_number(N) XIL ((EMACS_INT) (N) << INTTYPEBITS)
                       ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
./lisp.h:376:17: note: expanded from macro 'XIL'
#define XIL(i) (i)
                ^
In file included from bytecode.c:482:
./bytecode-jit.c:954:49: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  XSETFASTINT (_JIT_TOP, syntax_code_spec[(int) SYNTAX (c)]);
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
./syntax.h:92:21: note: expanded from macro 'SYNTAX'
     _syntax_temp = SYNTAX_ENTRY (c);                                   \
                    ^
./syntax.h:80:24: note: expanded from macro 'SYNTAX_ENTRY'
#  define SYNTAX_ENTRY SYNTAX_ENTRY_INT
                       ^
./syntax.h:84:29: note: expanded from macro 'SYNTAX_ENTRY_INT'
#define SYNTAX_ENTRY_INT(c) CHAR_TABLE_REF (CURRENT_SYNTAX_TABLE, (c))
                            ^
note: (skipping 11 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
./lisp.h:605:43: note: expanded from macro 'XSETINT'
#define XSETINT(a, b) ((a) = make_number (b))
                             ~~~~~~~~~~~~~^~
./lisp.h:467:42: note: expanded from macro 'make_number'
#define make_number(N) XIL ((EMACS_INT) (N) << INTTYPEBITS)
                       ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
./lisp.h:376:17: note: expanded from macro 'XIL'
#define XIL(i) (i)
                ^
In file included from bytecode.c:482:
./bytecode-jit.c:954:49: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  XSETFASTINT (_JIT_TOP, syntax_code_spec[(int) SYNTAX (c)]);
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
./syntax.h:92:21: note: expanded from macro 'SYNTAX'
     _syntax_temp = SYNTAX_ENTRY (c);                                   \
                    ^
./syntax.h:80:24: note: expanded from macro 'SYNTAX_ENTRY'
#  define SYNTAX_ENTRY SYNTAX_ENTRY_INT
                       ^
./syntax.h:84:29: note: expanded from macro 'SYNTAX_ENTRY_INT'
#define SYNTAX_ENTRY_INT(c) CHAR_TABLE_REF (CURRENT_SYNTAX_TABLE, (c))
                            ^
note: (skipping 11 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
./lisp.h:605:43: note: expanded from macro 'XSETINT'
#define XSETINT(a, b) ((a) = make_number (b))
                             ~~~~~~~~~~~~~^~
./lisp.h:467:42: note: expanded from macro 'make_number'
#define make_number(N) XIL ((EMACS_INT) (N) << INTTYPEBITS)
                       ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
./lisp.h:376:17: note: expanded from macro 'XIL'
#define XIL(i) (i)
                ^
In file included from bytecode.c:482:
./bytecode-jit.c:954:49: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  XSETFASTINT (_JIT_TOP, syntax_code_spec[(int) SYNTAX (c)]);
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
./syntax.h:92:21: note: expanded from macro 'SYNTAX'
     _syntax_temp = SYNTAX_ENTRY (c);                                   \
                    ^
./syntax.h:80:24: note: expanded from macro 'SYNTAX_ENTRY'
#  define SYNTAX_ENTRY SYNTAX_ENTRY_INT
                       ^
./syntax.h:84:29: note: expanded from macro 'SYNTAX_ENTRY_INT'
#define SYNTAX_ENTRY_INT(c) CHAR_TABLE_REF (CURRENT_SYNTAX_TABLE, (c))
                            ^
note: (skipping 11 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
./lisp.h:605:43: note: expanded from macro 'XSETINT'
#define XSETINT(a, b) ((a) = make_number (b))
                             ~~~~~~~~~~~~~^~
./lisp.h:467:42: note: expanded from macro 'make_number'
#define make_number(N) XIL ((EMACS_INT) (N) << INTTYPEBITS)
                       ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
./lisp.h:376:17: note: expanded from macro 'XIL'
#define XIL(i) (i)
                ^
In file included from bytecode.c:482:
./bytecode-jit.c:957:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(buffer_substring)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:966:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(delete_region)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:975:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(narrow_to_region)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:984:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(widen)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:991:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(end_of_line)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:998:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(set_marker)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:1008:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(match_beginning)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:1015:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(match_end)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:1022:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(upcase)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:1029:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(downcase)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:1036:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(stringeqlsign)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:1045:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(stringlss)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:1054:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(equal)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:1061:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(nthcdr)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:1070:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(elt)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:1098:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(member)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:1107:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(assq)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:1116:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(nreverse)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:1123:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(setcar)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:1132:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(setcdr)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:1141:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(car_safe)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:1148:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(cdr_safe)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:1155:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(nconc)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:1163:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(numberp)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:1168:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(integerp)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:1173:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT_OP(stack_ref)
^
./bytecode-jit.c:78:3: note: expanded from macro 'BYTECODE_JIT_OP'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core, int op)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:1179:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT_OP(stack_set)
^
./bytecode-jit.c:78:3: note: expanded from macro 'BYTECODE_JIT_OP'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core, int op)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:1186:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT_OP(stack_set2)
^
./bytecode-jit.c:78:3: note: expanded from macro 'BYTECODE_JIT_OP'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core, int op)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:1192:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT_OP(discardN)
^
./bytecode-jit.c:78:3: note: expanded from macro 'BYTECODE_JIT_OP'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core, int op)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:1202:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT_VECTOR_REF(constant)
^
./bytecode-jit.c:82:3: note: expanded from macro 'BYTECODE_JIT_VECTOR_REF'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core, Lisp_Object v)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:1211:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(return)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:1217:1: warning: calling convention 'fastcall' ignored for this target [-Wignored-attributes]
BYTECODE_JIT(jitcall)
^
./bytecode-jit.c:76:3: note: expanded from macro 'BYTECODE_JIT'
  JIT_FASTCALL static void bytecode_jit_##f(struct bytecode_jit_core* core)
  ^
./bytecode-jit.c:70:37: note: expanded from macro 'JIT_FASTCALL'
#define JIT_FASTCALL __attribute__((fastcall))
                                    ^
./bytecode-jit.c:1923:41: warning: passing 'unsigned char [new_bytestr_len]' to parameter of type 'const char *' converts between pointers to integer types with different sign [-Wpointer-sign]
  Lisp_Object new_bytestr = make_string(tmp_bytestr, new_bytestr_len);
                                        ^~~~~~~~~~~
./lisp.h:2905:45: note: passing argument to parameter here
extern Lisp_Object make_string (const char *, ptrdiff_t);
                                            ^
In file included from bytecode.c:482:
./bytecode-jit.c:1239:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  CHECK_VECTOR (vector);
  ^~~~~~~~~~~~~~~~~~~~~
./lisp.h:1762:15: note: expanded from macro 'CHECK_VECTOR'
  CHECK_TYPE (VECTORP (x), Qvectorp, x)
  ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1688:54: note: expanded from macro 'VECTORP'
#define VECTORP(x) (VECTORLIKEP (x) && !(ASIZE (x) & PSEUDOVECTOR_FLAG))
                                                     ^
./lisp.h:391:28: note: expanded from macro 'PSEUDOVECTOR_FLAG'
#define PSEUDOVECTOR_FLAG (PTRDIFF_MAX - PTRDIFF_MAX / 2)
                           ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
                              ^
./lisp.h:679:14: note: expanded from macro 'CHECK_TYPE'
  do { if (!(ok)) wrong_type_argument (Qxxxp, (x)); } while (0)
             ^~
In file included from bytecode.c:482:
./bytecode-jit.c:1239:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  CHECK_VECTOR (vector);
  ^~~~~~~~~~~~~~~~~~~~~
./lisp.h:1762:15: note: expanded from macro 'CHECK_VECTOR'
  CHECK_TYPE (VECTORP (x), Qvectorp, x)
  ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1688:54: note: expanded from macro 'VECTORP'
#define VECTORP(x) (VECTORLIKEP (x) && !(ASIZE (x) & PSEUDOVECTOR_FLAG))
                                                     ^
./lisp.h:391:42: note: expanded from macro 'PSEUDOVECTOR_FLAG'
#define PSEUDOVECTOR_FLAG (PTRDIFF_MAX - PTRDIFF_MAX / 2)
                                         ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
                              ^
./lisp.h:679:14: note: expanded from macro 'CHECK_TYPE'
  do { if (!(ok)) wrong_type_argument (Qxxxp, (x)); } while (0)
             ^~
In file included from bytecode.c:482:
./bytecode-jit.c:1976:7: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  if(!COMPILEDP(fun)) {
      ^~~~~~~~~~~~~~
./lisp.h:1722:22: note: expanded from macro 'COMPILEDP'
#define COMPILEDP(x) PSEUDOVECTORP (x, PVEC_COMPILED)
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1704:3: note: expanded from macro 'PSEUDOVECTORP'
  TYPED_PSEUDOVECTORP (x, vectorlike_header, code)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1714:7: note: expanded from macro 'TYPED_PSEUDOVECTORP'
   && PSEUDOVECTOR_TYPEP ((struct t *) XUNTAG (x, Lisp_Vectorlike), code))
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../lib/stdint.h:516:5: note: expanded from macro 'PTRDIFF_MAX'
    _STDINT_MAX (1, 64, 0l)
    ^~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
               ~~~~~~~~~~~~~~ ^
In file included from bytecode.c:482:
./bytecode-jit.c:1976:7: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  if(!COMPILEDP(fun)) {
      ^~~~~~~~~~~~~~
./lisp.h:1722:22: note: expanded from macro 'COMPILEDP'
#define COMPILEDP(x) PSEUDOVECTORP (x, PVEC_COMPILED)
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1704:3: note: expanded from macro 'PSEUDOVECTORP'
  TYPED_PSEUDOVECTORP (x, vectorlike_header, code)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1714:7: note: expanded from macro 'TYPED_PSEUDOVECTORP'
   && PSEUDOVECTOR_TYPEP ((struct t *) XUNTAG (x, Lisp_Vectorlike), code))
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../lib/stdint.h:516:5: note: expanded from macro 'PTRDIFF_MAX'
    _STDINT_MAX (1, 64, 0l)
    ^~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
               ~~~~~~~~~~~~~~ ^
In file included from bytecode.c:482:
./bytecode-jit.c:1976:7: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  if(!COMPILEDP(fun)) {
      ^~~~~~~~~~~~~~
./lisp.h:1722:22: note: expanded from macro 'COMPILEDP'
#define COMPILEDP(x) PSEUDOVECTORP (x, PVEC_COMPILED)
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1704:3: note: expanded from macro 'PSEUDOVECTORP'
  TYPED_PSEUDOVECTORP (x, vectorlike_header, code)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1714:7: note: expanded from macro 'TYPED_PSEUDOVECTORP'
   && PSEUDOVECTOR_TYPEP ((struct t *) XUNTAG (x, Lisp_Vectorlike), code))
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../lib/stdint.h:516:5: note: expanded from macro 'PTRDIFF_MAX'
    _STDINT_MAX (1, 64, 0l)
    ^~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
               ~~~~~~~~~~~~~~ ^
In file included from bytecode.c:482:
./bytecode-jit.c:1976:7: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  if(!COMPILEDP(fun)) {
      ^~~~~~~~~~~~~~
./lisp.h:1722:22: note: expanded from macro 'COMPILEDP'
#define COMPILEDP(x) PSEUDOVECTORP (x, PVEC_COMPILED)
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1704:3: note: expanded from macro 'PSEUDOVECTORP'
  TYPED_PSEUDOVECTORP (x, vectorlike_header, code)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1714:7: note: expanded from macro 'TYPED_PSEUDOVECTORP'
   && PSEUDOVECTOR_TYPEP ((struct t *) XUNTAG (x, Lisp_Vectorlike), code))
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../lib/stdint.h:516:5: note: expanded from macro 'PTRDIFF_MAX'
    _STDINT_MAX (1, 64, 0l)
    ^~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
               ~~~~~~~~~~~~~~ ^
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:98:26: note: expanded from macro 'BYTE_CODES'
#define BYTE_CODES                                                      \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:99:83: note: expanded from macro 'BYTE_CODES'
DEFINE (Bstack_ref, 0) /* Actually, Bstack_ref+0 is not implemented: use dup.  */ \
                                                                                  ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:100:31: note: expanded from macro 'BYTE_CODES'
DEFINE (Bstack_ref1, 1)                                                 \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:101:31: note: expanded from macro 'BYTE_CODES'
DEFINE (Bstack_ref2, 2)                                                 \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:102:31: note: expanded from macro 'BYTE_CODES'
DEFINE (Bstack_ref3, 3)                                                 \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:103:31: note: expanded from macro 'BYTE_CODES'
DEFINE (Bstack_ref4, 4)                                                 \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:104:31: note: expanded from macro 'BYTE_CODES'
DEFINE (Bstack_ref5, 5)                                                 \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:105:31: note: expanded from macro 'BYTE_CODES'
DEFINE (Bstack_ref6, 6)                                                 \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:106:31: note: expanded from macro 'BYTE_CODES'
DEFINE (Bstack_ref7, 7)                                                 \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:107:29: note: expanded from macro 'BYTE_CODES'
DEFINE (Bvarref, 010)                                                   \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:108:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bvarref1, 011)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:109:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bvarref2, 012)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:110:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bvarref3, 013)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:111:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bvarref4, 014)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:112:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bvarref5, 015)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:113:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bvarref6, 016)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:114:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bvarref7, 017)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:115:29: note: expanded from macro 'BYTE_CODES'
DEFINE (Bvarset, 020)                                                   \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:116:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bvarset1, 021)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:117:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bvarset2, 022)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:118:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bvarset3, 023)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:119:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bvarset4, 024)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:120:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bvarset5, 025)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:121:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bvarset6, 026)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:122:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bvarset7, 027)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:123:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bvarbind, 030)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:124:31: note: expanded from macro 'BYTE_CODES'
DEFINE (Bvarbind1, 031)                                                 \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:125:31: note: expanded from macro 'BYTE_CODES'
DEFINE (Bvarbind2, 032)                                                 \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:126:31: note: expanded from macro 'BYTE_CODES'
DEFINE (Bvarbind3, 033)                                                 \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:127:31: note: expanded from macro 'BYTE_CODES'
DEFINE (Bvarbind4, 034)                                                 \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:128:31: note: expanded from macro 'BYTE_CODES'
DEFINE (Bvarbind5, 035)                                                 \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:129:31: note: expanded from macro 'BYTE_CODES'
DEFINE (Bvarbind6, 036)                                                 \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:130:31: note: expanded from macro 'BYTE_CODES'
DEFINE (Bvarbind7, 037)                                                 \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:131:27: note: expanded from macro 'BYTE_CODES'
DEFINE (Bcall, 040)                                                     \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:132:28: note: expanded from macro 'BYTE_CODES'
DEFINE (Bcall1, 041)                                                    \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:133:28: note: expanded from macro 'BYTE_CODES'
DEFINE (Bcall2, 042)                                                    \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:134:28: note: expanded from macro 'BYTE_CODES'
DEFINE (Bcall3, 043)                                                    \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:135:28: note: expanded from macro 'BYTE_CODES'
DEFINE (Bcall4, 044)                                                    \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:136:28: note: expanded from macro 'BYTE_CODES'
DEFINE (Bcall5, 045)                                                    \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:137:28: note: expanded from macro 'BYTE_CODES'
DEFINE (Bcall6, 046)                                                    \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:138:28: note: expanded from macro 'BYTE_CODES'
DEFINE (Bcall7, 047)                                                    \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:139:29: note: expanded from macro 'BYTE_CODES'
DEFINE (Bunbind, 050)                                                   \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:140:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bunbind1, 051)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:141:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bunbind2, 052)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:142:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bunbind3, 053)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:143:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bunbind4, 054)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:144:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bunbind5, 055)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:145:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bunbind6, 056)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:147:10: note: expanded from macro 'BYTE_CODES'
                                                                        \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:148:26: note: expanded from macro 'BYTE_CODES'
DEFINE (Bnth, 070)                                                      \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:149:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bsymbolp, 071)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:150:28: note: expanded from macro 'BYTE_CODES'
DEFINE (Bconsp, 072)                                                    \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:151:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bstringp, 073)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:152:28: note: expanded from macro 'BYTE_CODES'
DEFINE (Blistp, 074)                                                    \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:153:25: note: expanded from macro 'BYTE_CODES'
DEFINE (Beq, 075)                                                       \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:154:27: note: expanded from macro 'BYTE_CODES'
DEFINE (Bmemq, 076)                                                     \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:155:26: note: expanded from macro 'BYTE_CODES'
DEFINE (Bnot, 077)                                                      \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:156:27: note: expanded from macro 'BYTE_CODES'
DEFINE (Bcar, 0100)                                                     \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:157:27: note: expanded from macro 'BYTE_CODES'
DEFINE (Bcdr, 0101)                                                     \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:158:28: note: expanded from macro 'BYTE_CODES'
DEFINE (Bcons, 0102)                                                    \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:159:29: note: expanded from macro 'BYTE_CODES'
DEFINE (Blist1, 0103)                                                   \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:160:29: note: expanded from macro 'BYTE_CODES'
DEFINE (Blist2, 0104)                                                   \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:161:29: note: expanded from macro 'BYTE_CODES'
DEFINE (Blist3, 0105)                                                   \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:162:29: note: expanded from macro 'BYTE_CODES'
DEFINE (Blist4, 0106)                                                   \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:163:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Blength, 0107)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:164:28: note: expanded from macro 'BYTE_CODES'
DEFINE (Baref, 0110)                                                    \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:165:28: note: expanded from macro 'BYTE_CODES'
DEFINE (Baset, 0111)                                                    \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:166:35: note: expanded from macro 'BYTE_CODES'
DEFINE (Bsymbol_value, 0112)                                            \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:167:38: note: expanded from macro 'BYTE_CODES'
DEFINE (Bsymbol_function, 0113)                                         \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:168:27: note: expanded from macro 'BYTE_CODES'
DEFINE (Bset, 0114)                                                     \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:169:28: note: expanded from macro 'BYTE_CODES'
DEFINE (Bfset, 0115)                                                    \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:170:27: note: expanded from macro 'BYTE_CODES'
DEFINE (Bget, 0116)                                                     \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:171:32: note: expanded from macro 'BYTE_CODES'
DEFINE (Bsubstring, 0117)                                               \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:172:31: note: expanded from macro 'BYTE_CODES'
DEFINE (Bconcat2, 0120)                                                 \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:173:31: note: expanded from macro 'BYTE_CODES'
DEFINE (Bconcat3, 0121)                                                 \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:174:31: note: expanded from macro 'BYTE_CODES'
DEFINE (Bconcat4, 0122)                                                 \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:175:28: note: expanded from macro 'BYTE_CODES'
DEFINE (Bsub1, 0123)                                                    \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:176:28: note: expanded from macro 'BYTE_CODES'
DEFINE (Badd1, 0124)                                                    \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:177:31: note: expanded from macro 'BYTE_CODES'
DEFINE (Beqlsign, 0125)                                                 \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:178:27: note: expanded from macro 'BYTE_CODES'
DEFINE (Bgtr, 0126)                                                     \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:179:27: note: expanded from macro 'BYTE_CODES'
DEFINE (Blss, 0127)                                                     \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:180:27: note: expanded from macro 'BYTE_CODES'
DEFINE (Bleq, 0130)                                                     \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:181:27: note: expanded from macro 'BYTE_CODES'
DEFINE (Bgeq, 0131)                                                     \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:182:28: note: expanded from macro 'BYTE_CODES'
DEFINE (Bdiff, 0132)                                                    \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:183:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bnegate, 0133)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:184:28: note: expanded from macro 'BYTE_CODES'
DEFINE (Bplus, 0134)                                                    \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:185:27: note: expanded from macro 'BYTE_CODES'
DEFINE (Bmax, 0135)                                                     \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:186:27: note: expanded from macro 'BYTE_CODES'
DEFINE (Bmin, 0136)                                                     \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:188:10: note: expanded from macro 'BYTE_CODES'
                                                                        \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:190:31: note: expanded from macro 'BYTE_CODES'
/* Was Bmark in v17.  */                                                \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:191:56: note: expanded from macro 'BYTE_CODES'
DEFINE (Bsave_current_buffer, 0141) /* Obsolete.  */                    \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:192:32: note: expanded from macro 'BYTE_CODES'
DEFINE (Bgoto_char, 0142)                                               \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:193:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Binsert, 0143)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:194:32: note: expanded from macro 'BYTE_CODES'
DEFINE (Bpoint_max, 0144)                                               \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:195:32: note: expanded from macro 'BYTE_CODES'
DEFINE (Bpoint_min, 0145)                                               \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:196:33: note: expanded from macro 'BYTE_CODES'
DEFINE (Bchar_after, 0146)                                              \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:197:37: note: expanded from macro 'BYTE_CODES'
DEFINE (Bfollowing_char, 0147)                                          \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:198:37: note: expanded from macro 'BYTE_CODES'
DEFINE (Bpreceding_char, 0150)                                          \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:199:37: note: expanded from macro 'BYTE_CODES'
DEFINE (Bcurrent_column, 0151)                                          \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:200:32: note: expanded from macro 'BYTE_CODES'
DEFINE (Bindent_to, 0152)                                               \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:201:28: note: expanded from macro 'BYTE_CODES'
DEFINE (Beolp, 0154)                                                    \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:202:28: note: expanded from macro 'BYTE_CODES'
DEFINE (Beobp, 0155)                                                    \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:203:28: note: expanded from macro 'BYTE_CODES'
DEFINE (Bbolp, 0156)                                                    \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:204:28: note: expanded from macro 'BYTE_CODES'
DEFINE (Bbobp, 0157)                                                    \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:205:37: note: expanded from macro 'BYTE_CODES'
DEFINE (Bcurrent_buffer, 0160)                                          \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:206:33: note: expanded from macro 'BYTE_CODES'
DEFINE (Bset_buffer, 0161)                                              \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:207:78: note: expanded from macro 'BYTE_CODES'
DEFINE (Bsave_current_buffer_1, 0162) /* Replacing Bsave_current_buffer.  */ \
                                                                             ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:209:10: note: expanded from macro 'BYTE_CODES'
                                                                        \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:210:35: note: expanded from macro 'BYTE_CODES'
DEFINE (Bforward_char, 0165)                                            \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:211:35: note: expanded from macro 'BYTE_CODES'
DEFINE (Bforward_word, 0166)                                            \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:212:40: note: expanded from macro 'BYTE_CODES'
DEFINE (Bskip_chars_forward, 0167)                                      \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:213:41: note: expanded from macro 'BYTE_CODES'
DEFINE (Bskip_chars_backward, 0170)                                     \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:214:35: note: expanded from macro 'BYTE_CODES'
DEFINE (Bforward_line, 0171)                                            \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:215:34: note: expanded from macro 'BYTE_CODES'
DEFINE (Bchar_syntax, 0172)                                             \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:216:38: note: expanded from macro 'BYTE_CODES'
DEFINE (Bbuffer_substring, 0173)                                        \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:217:36: note: expanded from macro 'BYTE_CODES'
DEFINE (Bdelete_region, 0174)                                           \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:218:38: note: expanded from macro 'BYTE_CODES'
DEFINE (Bnarrow_to_region, 0175)                                        \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:219:29: note: expanded from macro 'BYTE_CODES'
DEFINE (Bwiden, 0176)                                                   \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:221:10: note: expanded from macro 'BYTE_CODES'
                                                                        \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:222:32: note: expanded from macro 'BYTE_CODES'
DEFINE (Bconstant2, 0201)                                               \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:223:28: note: expanded from macro 'BYTE_CODES'
DEFINE (Bgoto, 0202)                                                    \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:224:32: note: expanded from macro 'BYTE_CODES'
DEFINE (Bgotoifnil, 0203)                                               \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:225:35: note: expanded from macro 'BYTE_CODES'
DEFINE (Bgotoifnonnil, 0204)                                            \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:226:38: note: expanded from macro 'BYTE_CODES'
DEFINE (Bgotoifnilelsepop, 0205)                                        \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:227:41: note: expanded from macro 'BYTE_CODES'
DEFINE (Bgotoifnonnilelsepop, 0206)                                     \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:228:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Breturn, 0207)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:229:31: note: expanded from macro 'BYTE_CODES'
DEFINE (Bdiscard, 0210)                                                 \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:231:10: note: expanded from macro 'BYTE_CODES'
                                                                        \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:232:37: note: expanded from macro 'BYTE_CODES'
DEFINE (Bsave_excursion, 0212)                                          \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:233:73: note: expanded from macro 'BYTE_CODES'
DEFINE (Bsave_window_excursion, 0213) /* Obsolete since Emacs-24.1.  */ \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:234:38: note: expanded from macro 'BYTE_CODES'
DEFINE (Bsave_restriction, 0214)                                        \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:236:10: note: expanded from macro 'BYTE_CODES'
                                                                        \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:237:37: note: expanded from macro 'BYTE_CODES'
DEFINE (Bunwind_protect, 0216)                                          \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:238:37: note: expanded from macro 'BYTE_CODES'
DEFINE (Bcondition_case, 0217)                                          \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:239:76: note: expanded from macro 'BYTE_CODES'
DEFINE (Btemp_output_buffer_setup, 0220) /* Obsolete since Emacs-24.1.  */ \
                                                                           ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:241:10: note: expanded from macro 'BYTE_CODES'
                                                                        \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:243:10: note: expanded from macro 'BYTE_CODES'
                                                                        \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:244:33: note: expanded from macro 'BYTE_CODES'
DEFINE (Bset_marker, 0223)                                              \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:245:38: note: expanded from macro 'BYTE_CODES'
DEFINE (Bmatch_beginning, 0224)                                         \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:246:32: note: expanded from macro 'BYTE_CODES'
DEFINE (Bmatch_end, 0225)                                               \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:247:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bupcase, 0226)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:249:10: note: expanded from macro 'BYTE_CODES'
                                                                        \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:250:36: note: expanded from macro 'BYTE_CODES'
DEFINE (Bstringeqlsign, 0230)                                           \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:251:32: note: expanded from macro 'BYTE_CODES'
DEFINE (Bstringlss, 0231)                                               \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:252:29: note: expanded from macro 'BYTE_CODES'
DEFINE (Bequal, 0232)                                                   \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:253:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bnthcdr, 0233)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:254:27: note: expanded from macro 'BYTE_CODES'
DEFINE (Belt, 0234)                                                     \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:255:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bmember, 0235)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:256:28: note: expanded from macro 'BYTE_CODES'
DEFINE (Bassq, 0236)                                                    \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:257:31: note: expanded from macro 'BYTE_CODES'
DEFINE (Bnreverse, 0237)                                                \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:258:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bsetcar, 0240)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:259:30: note: expanded from macro 'BYTE_CODES'
DEFINE (Bsetcdr, 0241)                                                  \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:260:31: note: expanded from macro 'BYTE_CODES'
DEFINE (Bcar_safe, 0242)                                                \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:261:31: note: expanded from macro 'BYTE_CODES'
DEFINE (Bcdr_safe, 0243)                                                \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:262:29: note: expanded from macro 'BYTE_CODES'
DEFINE (Bnconc, 0244)                                                   \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:263:27: note: expanded from macro 'BYTE_CODES'
DEFINE (Bquo, 0245)                                                     \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:264:27: note: expanded from macro 'BYTE_CODES'
DEFINE (Brem, 0246)                                                     \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:265:31: note: expanded from macro 'BYTE_CODES'
DEFINE (Bnumberp, 0247)                                                 \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:267:10: note: expanded from macro 'BYTE_CODES'
                                                                        \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:268:29: note: expanded from macro 'BYTE_CODES'
DEFINE (BRgoto, 0252)                                                   \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:269:33: note: expanded from macro 'BYTE_CODES'
DEFINE (BRgotoifnil, 0253)                                              \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:270:36: note: expanded from macro 'BYTE_CODES'
DEFINE (BRgotoifnonnil, 0254)                                           \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:271:39: note: expanded from macro 'BYTE_CODES'
DEFINE (BRgotoifnilelsepop, 0255)                                       \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:273:10: note: expanded from macro 'BYTE_CODES'
                                                                        \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:274:29: note: expanded from macro 'BYTE_CODES'
DEFINE (BlistN, 0257)                                                   \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:275:31: note: expanded from macro 'BYTE_CODES'
DEFINE (BconcatN, 0260)                                                 \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:278:35: note: expanded from macro 'BYTE_CODES'
/* Bstack_ref is code 0.  */                                            \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:279:33: note: expanded from macro 'BYTE_CODES'
DEFINE (Bstack_set,  0262)                                              \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:280:33: note: expanded from macro 'BYTE_CODES'
DEFINE (Bstack_set2, 0263)                                              \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:282:73: note: expanded from macro 'BYTE_CODES'
                                                                        \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:688:30: note: previous initialization is here
          [0 ... (Bconstant - 1)] = &&insn_default,
                                    ^~~~~~~~~~~~~~
bytecode.c:692:4: warning: initializer overrides prior initialization of this subobject [-Winitializer-overrides]
          BYTE_CODES
          ^~~~~~~~~~
bytecode.c:283:73: note: expanded from macro 'BYTE_CODES'
DEFINE (Bjitcall, 0267)                                                 \
                                                                        ^
bytecode.c:691:29: note: expanded from macro '\
DEFINE'
#define DEFINE(name, value) LABEL (name) ,
                            ^~~~~~~~~~~~
bytecode.c:678:26: note: expanded from macro 'LABEL'
#define LABEL(OP) [OP] = &&insn_ ## OP
                         ^~~~~~~~~~~~~
bytecode.c:689:26: note: previous initialization is here
          [Bconstant ... 255] = &&insn_Bconstant,
                                ^~~~~~~~~~~~~~~~
bytecode.c:537:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  CHECK_VECTOR (vector);
  ^~~~~~~~~~~~~~~~~~~~~
./lisp.h:1762:15: note: expanded from macro 'CHECK_VECTOR'
  CHECK_TYPE (VECTORP (x), Qvectorp, x)
  ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1688:54: note: expanded from macro 'VECTORP'
#define VECTORP(x) (VECTORLIKEP (x) && !(ASIZE (x) & PSEUDOVECTOR_FLAG))
                                                     ^
./lisp.h:391:28: note: expanded from macro 'PSEUDOVECTOR_FLAG'
#define PSEUDOVECTOR_FLAG (PTRDIFF_MAX - PTRDIFF_MAX / 2)
                           ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
                              ^
./lisp.h:679:14: note: expanded from macro 'CHECK_TYPE'
  do { if (!(ok)) wrong_type_argument (Qxxxp, (x)); } while (0)
             ^~
bytecode.c:537:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  CHECK_VECTOR (vector);
  ^~~~~~~~~~~~~~~~~~~~~
./lisp.h:1762:15: note: expanded from macro 'CHECK_VECTOR'
  CHECK_TYPE (VECTORP (x), Qvectorp, x)
  ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
./lisp.h:1688:54: note: expanded from macro 'VECTORP'
#define VECTORP(x) (VECTORLIKEP (x) && !(ASIZE (x) & PSEUDOVECTOR_FLAG))
                                                     ^
./lisp.h:391:42: note: expanded from macro 'PSEUDOVECTOR_FLAG'
#define PSEUDOVECTOR_FLAG (PTRDIFF_MAX - PTRDIFF_MAX / 2)
                                         ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../lib/stdint.h:127:8: note: expanded from macro '_STDINT_MAX'
   ? ~ _STDINT_MIN (signed, bits, zero) \
       ^
../lib/stdint.h:123:31: note: expanded from macro '_STDINT_MIN'
  ((signed) ? (- ((zero) + 1) << ((bits) ? (bits) - 1 : 0)) : (zero))
                              ^
./lisp.h:679:14: note: expanded from macro 'CHECK_TYPE'
  do { if (!(ok)) wrong_type_argument (Qxxxp, (x)); } while (0)
             ^~
bytecode.c:1655:47: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            XSETFASTINT (TOP, syntax_code_spec[(int) SYNTAX (c)]);
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
./syntax.h:92:21: note: expanded from macro 'SYNTAX'
     _syntax_temp = SYNTAX_ENTRY (c);                                   \
                    ^
./syntax.h:80:24: note: expanded from macro 'SYNTAX_ENTRY'
#  define SYNTAX_ENTRY SYNTAX_ENTRY_INT
                       ^
./syntax.h:84:29: note: expanded from macro 'SYNTAX_ENTRY_INT'
#define SYNTAX_ENTRY_INT(c) CHAR_TABLE_REF (CURRENT_SYNTAX_TABLE, (c))
                            ^
note: (skipping 11 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
./lisp.h:605:43: note: expanded from macro 'XSETINT'
#define XSETINT(a, b) ((a) = make_number (b))
                             ~~~~~~~~~~~~~^~
./lisp.h:467:42: note: expanded from macro 'make_number'
#define make_number(N) XIL ((EMACS_INT) (N) << INTTYPEBITS)
                       ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
./lisp.h:376:17: note: expanded from macro 'XIL'
#define XIL(i) (i)
                ^
bytecode.c:1655:47: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            XSETFASTINT (TOP, syntax_code_spec[(int) SYNTAX (c)]);
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
./syntax.h:92:21: note: expanded from macro 'SYNTAX'
     _syntax_temp = SYNTAX_ENTRY (c);                                   \
                    ^
./syntax.h:80:24: note: expanded from macro 'SYNTAX_ENTRY'
#  define SYNTAX_ENTRY SYNTAX_ENTRY_INT
                       ^
./syntax.h:84:29: note: expanded from macro 'SYNTAX_ENTRY_INT'
#define SYNTAX_ENTRY_INT(c) CHAR_TABLE_REF (CURRENT_SYNTAX_TABLE, (c))
                            ^
note: (skipping 11 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
./lisp.h:605:43: note: expanded from macro 'XSETINT'
#define XSETINT(a, b) ((a) = make_number (b))
                             ~~~~~~~~~~~~~^~
./lisp.h:467:42: note: expanded from macro 'make_number'
#define make_number(N) XIL ((EMACS_INT) (N) << INTTYPEBITS)
                       ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
./lisp.h:376:17: note: expanded from macro 'XIL'
#define XIL(i) (i)
                ^
bytecode.c:1655:47: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            XSETFASTINT (TOP, syntax_code_spec[(int) SYNTAX (c)]);
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
./syntax.h:92:21: note: expanded from macro 'SYNTAX'
     _syntax_temp = SYNTAX_ENTRY (c);                                   \
                    ^
./syntax.h:80:24: note: expanded from macro 'SYNTAX_ENTRY'
#  define SYNTAX_ENTRY SYNTAX_ENTRY_INT
                       ^
./syntax.h:84:29: note: expanded from macro 'SYNTAX_ENTRY_INT'
#define SYNTAX_ENTRY_INT(c) CHAR_TABLE_REF (CURRENT_SYNTAX_TABLE, (c))
                            ^
note: (skipping 11 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
./lisp.h:605:43: note: expanded from macro 'XSETINT'
#define XSETINT(a, b) ((a) = make_number (b))
                             ~~~~~~~~~~~~~^~
./lisp.h:467:42: note: expanded from macro 'make_number'
#define make_number(N) XIL ((EMACS_INT) (N) << INTTYPEBITS)
                       ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
./lisp.h:376:17: note: expanded from macro 'XIL'
#define XIL(i) (i)
                ^
bytecode.c:1655:47: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            XSETFASTINT (TOP, syntax_code_spec[(int) SYNTAX (c)]);
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
./syntax.h:92:21: note: expanded from macro 'SYNTAX'
     _syntax_temp = SYNTAX_ENTRY (c);                                   \
                    ^
./syntax.h:80:24: note: expanded from macro 'SYNTAX_ENTRY'
#  define SYNTAX_ENTRY SYNTAX_ENTRY_INT
                       ^
./syntax.h:84:29: note: expanded from macro 'SYNTAX_ENTRY_INT'
#define SYNTAX_ENTRY_INT(c) CHAR_TABLE_REF (CURRENT_SYNTAX_TABLE, (c))
                            ^
note: (skipping 11 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
./lisp.h:605:43: note: expanded from macro 'XSETINT'
#define XSETINT(a, b) ((a) = make_number (b))
                             ~~~~~~~~~~~~~^~
./lisp.h:467:42: note: expanded from macro 'make_number'
#define make_number(N) XIL ((EMACS_INT) (N) << INTTYPEBITS)
                       ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
./lisp.h:376:17: note: expanded from macro 'XIL'
#define XIL(i) (i)
                ^
341 warnings generated.
gcc  -Demacs  -I. -I/Users/burtonsamograd/emacs-jit/emacs-profile-git/src -I../lib -I/Users/burtonsamograd/emacs-jit/emacs-profile-git/src/../lib      -D_REENTRANT -I/usr/local/Cellar/librsvg/2.40.16_1/include/librsvg-2.0 -I/usr/local/Cellar/gdk-pixbuf/2.36.0_2/include/gdk-pixbuf-2.0 -I/usr/local/Cellar/libpng/1.6.25/include/libpng16 -I/usr/local/Cellar/cairo/1.14.6_1/include/cairo -I/usr/local/Cellar/glib/2.50.1/include/glib-2.0 -I/usr/local/Cellar/glib/2.50.1/lib/glib-2.0/include -I/usr/local/opt/gettext/include -I/usr/local/Cellar/pcre/8.39/include -I/usr/local/Cellar/pixman/0.34.0/include/pixman-1 -I/usr/local/Cellar/fontconfig/2.12.1_2/include -I/usr/local/opt/freetype/include/freetype2 -I/usr/local/Cellar/libpng/1.6.25/include/libpng16  -I/usr/include/libxml2       -MMD -MF deps/.d -MP  -I/usr/local/Cellar/gnutls/3.4.16/include -I/usr/local/Cellar/nettle/3.3/include -I/usr/local/Cellar/libtasn1/4.9/include   -g3 -O2  -fno-pie -prebind -framework AppKit -Xlinker -headerpad -Xlinker 6C8  \
	  -o temacs pre-crt0.o dispnew.o frame.o scroll.o xdisp.o menu.o  window.o charset.o coding.o category.o ccl.o character.o chartab.o bidi.o cm.o term.o terminal.o xfaces.o    emacs.o keyboard.o macros.o keymap.o sysdep.o buffer.o filelock.o insdel.o marker.o minibuf.o fileio.o dired.o cmds.o casetab.o casefiddle.o indent.o search.o regex.o undo.o alloc.o data.o doc.o editfns.o callint.o eval.o floatfns.o fns.o font.o print.o lread.o syntax.o unexmacosx.o bytecode.o process.o gnutls.o callproc.o region-cache.o sound.o atimer.o doprnt.o intervals.o textprop.o composite.o xml.o profiler.o       fontset.o fringe.o image.o nsterm.o nsfns.o nsmenu.o nsselect.o nsimage.o nsfont.o terminfo.o lastfile.o       ../lib/libgnu.a        -L/usr/local/Cellar/librsvg/2.40.16_1/lib -L/usr/local/Cellar/glib/2.50.1/lib -L/usr/local/Cellar/gdk-pixbuf/2.36.0_2/lib -L/usr/local/Cellar/glib/2.50.1/lib -L/usr/local/opt/gettext/lib -L/usr/local/Cellar/cairo/1.14.6_1/lib -lrsvg-2 -lm -lgio-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 -lintl -lcairo       -lxml2  -ljit   -lncurses        -L/usr/local/Cellar/gnutls/3.4.16/lib -lgnutls -lpthread     
test "no" = "yes" || \
	  test "X" = X ||  -r temacs
rm -f ../etc/DOC
../lib-src/make-docfile -d /Users/burtonsamograd/emacs-jit/emacs-profile-git/src dosfns.o msdos.o xterm.o xfns.o xmenu.o xselect.o xrdb.o xsmfns.o fringe.o image.o fontset.o dbusbind.o cygw32.o nsterm.o nsfns.o nsmenu.o nsselect.o nsimage.o nsfont.o w32.o w32console.o w32fns.o w32heap.o w32inevt.o w32menu.o w32proc.o w32reg.o w32select.o w32term.o w32xfns.o w16select.o widget.o xfont.o ftfont.o xftfont.o ftxfont.o gtkutil.o xsettings.o xgselect.o termcap.o dispnew.o frame.o scroll.o xdisp.o menu.o  window.o charset.o coding.o category.o ccl.o character.o chartab.o bidi.o cm.o term.o terminal.o xfaces.o    emacs.o keyboard.o macros.o keymap.o sysdep.o buffer.o filelock.o insdel.o marker.o minibuf.o fileio.o dired.o cmds.o casetab.o casefiddle.o indent.o search.o regex.o undo.o alloc.o data.o doc.o editfns.o callint.o eval.o floatfns.o fns.o font.o print.o lread.o syntax.o unexmacosx.o bytecode.o process.o gnutls.o callproc.o region-cache.o sound.o atimer.o doprnt.o intervals.o textprop.o composite.o xml.o profiler.o       fontset.o fringe.o image.o nsterm.o nsfns.o nsmenu.o nsselect.o nsimage.o nsfont.o > ../etc/DOC
../lib-src/make-docfile -a ../etc/DOC -d /Users/burtonsamograd/emacs-jit/emacs-profile-git/src/../lisp `sed -n -e 's| \\\\||' -e 's|^[ 	]*$(lispsource)/||p' /Users/burtonsamograd/emacs-jit/emacs-profile-git/src/lisp.mk`
cd ../lisp; /Library/Developer/CommandLineTools/usr/bin/make  update-subdirs
cd /Users/burtonsamograd/emacs-jit/emacs-profile-git/lisp; subdirs=`find . -type d -print`; for file in $subdirs; do case $file in */.* | */.*/* | */=* | */cedet* ) ;; *) wins="$wins $file" ;; esac; done; \
	for file in $wins; do \
	   /Users/burtonsamograd/emacs-jit/emacs-profile-git/build-aux/update-subdirs $file; \
	done;
if test "no" = "yes"; then \
	  rm -f bootstrap-emacs; \
	  ln temacs bootstrap-emacs; \
	else \
	  `/bin/pwd`/temacs --batch --load loadup bootstrap || exit 1; \
	  test "X" = X ||  -zex emacs; \
	  mv -f emacs bootstrap-emacs; \
	fi
Loading loadup.el (source)...
Using load-path (/Users/burtonsamograd/emacs-jit/emacs-profile-git/lisp /Users/burtonsamograd/emacs-jit/emacs-profile-git/lisp/emacs-lisp /Users/burtonsamograd/emacs-jit/emacs-profile-git/lisp/language /Users/burtonsamograd/emacs-jit/emacs-profile-git/lisp/international /Users/burtonsamograd/emacs-jit/emacs-profile-git/lisp/textmodes)
Loading emacs-lisp/byte-run...
Loading emacs-lisp/backquote...
Loading subr...
Loading version...
Loading widget...
Loading custom...
Loading emacs-lisp/map-ynp...
Loading international/mule...
Loading international/mule-conf...
Loading env...
Loading format...
Loading bindings...
Loading cus-start...
Loading window...
Loading files...
Loading emacs-lisp/macroexp...
Loading cus-face...
Loading faces...
Loading button...
Loading startup...
Loading /Users/burtonsamograd/emacs-jit/emacs-profile-git/lisp/loaddefs.el (source)...
Loading minibuffer...
Loading abbrev...
Loading simple...
Loading help...
Loading jka-cmpr-hook...
Loading epa-hook...
Loading international/mule-cmds...
Loading case-table...
Loading /Users/burtonsamograd/emacs-jit/emacs-profile-git/lisp/international/charprop.el (source)...
Loading international/characters...
Loading composite...
Loading language/chinese...
Loading language/cyrillic...
Loading language/indian...
Loading language/sinhala...
Loading language/english...
Loading language/ethiopic...
Loading language/european...
Loading language/czech...
Loading language/slovak...
Loading language/romanian...
Loading language/greek...
Loading language/hebrew...
Loading language/japanese...
Loading /Users/burtonsamograd/emacs-jit/emacs-profile-git/lisp/international/cp51932.el (source)...
Loading /Users/burtonsamograd/emacs-jit/emacs-profile-git/lisp/international/eucjp-ms.el (source)...
Loading language/korean...
Loading language/lao...
Loading language/tai-viet...
Loading language/thai...
Loading language/tibetan...
Loading language/vietnamese...
Loading language/misc-lang...
Loading language/utf-8-lang...
Loading language/georgian...
Loading language/khmer...
Loading language/burmese...
Loading language/cham...
Loading indent...
Loading frame...
Loading term/tty-colors...
Loading font-core...
Loading facemenu...
Loading emacs-lisp/syntax...
Loading font-lock...
Loading jit-lock...
Loading mouse...
Loading scroll-bar...
Loading select...
Loading emacs-lisp/timer...
Loading isearch...
Loading rfn-eshadow...
Loading menu-bar...
Loading emacs-lisp/lisp...
Loading textmodes/page...
Loading register...
Loading textmodes/paragraphs...
Loading emacs-lisp/lisp-mode...
Loading textmodes/text-mode...
Loading textmodes/fill...
Loading newcomment...
Loading replace...
Loading emacs-lisp/tabulated-list...
Loading buff-menu...
Loading fringe...
Loading emacs-lisp/regexp-opt...
Loading image...
Loading international/fontset...
Loading dnd...
Loading tool-bar...
Loading term/common-win...
Loading term/ns-win...
Loading mwheel...
Loading emacs-lisp/float-sup...
Loading vc/vc-hooks...
Loading vc/ediff-hook...
Loading tooltip...
Finding pointers to doc strings...
Finding pointers to doc strings...done
Dumping under the name emacs
--- List of All Regions ---
   address     size prot maxp
--- List of Regions to be Dumped ---
   address     size prot maxp
--- Header Information ---
Magic = 0xfeedfacf
CPUType = 16777223
CPUSubType = -2147483645
FileType = 0x2
NCmds = 33
SizeOfCmds = 4216
Flags = 0x00000085
Highest address of load commands in input file: 0x10063f000
Lowest offset of all sections in __TEXT segment:   0x1e40
--- List of Load Commands in Input File ---
# cmd              cmdsize name                address     size
0 LC_SEGMENT_64          72 __PAGEZERO                0 0x100000000
1 LC_SEGMENT_64         872 __TEXT           0x100000000 0x1e4000
                           __text           0x100001e40 0x1c41a0
                           __stubs          0x1001c5fe0    0x7fe
                           __stub_helper    0x1001c67e0    0xd62
                           __const          0x1001c7550   0x1484
                           __cstring        0x1001c89e0  0x14ea3
                           __objc_methname  0x1001dd883   0x31a6
                           __objc_classname 0x1001e0a29    0x11f
                           __objc_methtype  0x1001e0b48   0x1418
                           __gcc_except_tab 0x1001e1f60     0x4c
                           __unwind_info    0x1001e1fac   0x204c
2 LC_SEGMENT_64        1432 __DATA           0x1001e4000 0x39c000
                           __nl_symbol_ptr  0x1001e4000     0x10
                           __got            0x1001e4010    0x1f0
                           __la_symbol_ptr  0x1001e4200    0xaa8
                           __const          0x1001e4cb0   0x3588
                           __cfstring       0x1001e8238    0x660
                           __objc_classlist 0x1001e8898     0x78
                           __objc_protolist 0x1001e8910     0x30
                           __objc_imageinfo 0x1001e8940      0x8
                           __objc_const     0x1001e8948   0x3a48
                           __objc_selrefs   0x1001ec390    0xf18
                           __objc_classrefs 0x1001ed2a8    0x1f0
                           __objc_superrefs 0x1001ed498     0x60
                           __objc_ivar      0x1001ed4f8    0x1f8
                           __objc_data      0x1001ed6f0    0x4b0
                           __data           0x1001edba0 0x317138
                           __common         0x100504ce0   0x41e1
                           __bss            0x100508ed0  0x76990
3 LC_SEGMENT_64          72 __LINKEDIT       0x100580000  0xbf000
4 LC_DYLD_INFO_ONLY      48
5 LC_SYMTAB              24
6 LC_DYSYMTAB            80
7 LC_LOAD_DYLINKER       32
8 LC_UUID                24
9 LC_VERSION_MIN_MACOSX      16
10 LC_SOURCE_VERSION      16
11 LC_MAIN                24
12 LC_LOAD_DYLIB          88
13 LC_LOAD_DYLIB          72
14 LC_LOAD_DYLIB          56
15 LC_LOAD_DYLIB          72
16 LC_LOAD_DYLIB          80
17 LC_LOAD_DYLIB          72
18 LC_LOAD_DYLIB          72
19 LC_LOAD_DYLIB          72
20 LC_LOAD_DYLIB          72
21 LC_LOAD_DYLIB          56
22 LC_LOAD_DYLIB          56
23 LC_LOAD_DYLIB          56
24 LC_LOAD_DYLIB          72
25 LC_LOAD_DYLIB         112
26 LC_LOAD_DYLIB         104
27 LC_LOAD_DYLIB         104
28 LC_LOAD_DYLIB         104
29 LC_LOAD_DYLIB          96
30 LC_LOAD_DYLIB          56
31 LC_FUNCTION_STARTS      16
32 LC_DATA_IN_CODE        16
0x1016fc080 (sz:   0x3f24/  0x3f28)
0x101600000 (sz:   0x61f5/ 0xfc080)
0x1015fc080 (sz:   0x3f24/  0x3f28)
0x101500000 (sz:  0x654cd/ 0xfc080)
0x1012fc080 (sz:   0x3f24/  0x3f28)
0x101200000 (sz:  0xdf877/ 0xfc080)
0x1017fc080 (sz:   0x3f24/  0x3f28)
0x101700000 (sz:   0x1b4d/ 0xfc080)
0x1037f7e00 (sz:    0x82e/  0x7f9e)
0x103000000 (sz:  0x80a05/0x7f7e00)
0x102ff7e00 (sz:   0x35aa/  0x7f9e)
0x102800000 (sz: 0x3578c1/0x7f7e00)
0x1027f7e00 (sz:   0x3f90/  0x7f9e)
0x102000000 (sz: 0x3f6bfd/0x7f7e00)
0x104ff7e00 (sz:    0x520/  0x7f9e)
0x104800000 (sz:  0x4fcda/0x7f7e00)
0x100ff4000 (sz:        0/  0x1000)
--- Load Commands written to Output File ---
Writing segment __PAGEZERO       @        0 (       0/0x100000000 @       84170 pure bytes used
   0)
Writing segment __TEXT           @        0 (0x1e4000/0x1e4000 @ 0x100000000)
Writing segment __DATA           @ 0x1e4000 (0x39c000/0x39c000 @ 0x1001e4000)
        section __nl_symbol_ptr  at 0x1e4000 - 0x1e4010 (sz:     0x10)
        section __got            at 0x1e4010 - 0x1e4200 (sz:    0x1f0)
        section __la_symbol_ptr  at 0x1e4200 - 0x1e4ca8 (sz:    0xaa8)
        section __const          at 0x1e4cb0 - 0x1e8238 (sz:   0x3588)
        section __cfstring       at 0x1e8238 - 0x1e8898 (sz:    0x660)
        section __objc_classlist at 0x1e8898 - 0x1e8910 (sz:     0x78)
        section __objc_protolist at 0x1e8910 - 0x1e8940 (sz:     0x30)
        section __objc_imageinfo at 0x1e8940 - 0x1e8948 (sz:      0x8)
        section __objc_const     at 0x1e8948 - 0x1ec390 (sz:   0x3a48)
        section __objc_selrefs   at 0x1ec390 - 0x1ed2a8 (sz:    0xf18)
        section __objc_classrefs at 0x1ed2a8 - 0x1ed498 (sz:    0x1f0)
        section __objc_superrefs at 0x1ed498 - 0x1ed4f8 (sz:     0x60)
        section __objc_ivar      at 0x1ed4f8 - 0x1ed6f0 (sz:    0x1f8)
        section __objc_data      at 0x1ed6f0 - 0x1edba0 (sz:    0x4b0)
        section __data           at 0x1edba0 - 0x504cd8 (sz: 0x317138)
        section __common         at 0x504ce0 - 0x508ec1 (sz:   0x41e1)
        section __bss            at 0x508ed0 - 0x57f860 (sz:  0x76990)
Writing segment __DATA           @ 0x580000 (       0/  0x1000 @ 0x100ff4000)
Writing segment __DATA           @ 0x580000 ( 0xdf877/ 0xfc000 @ 0x101200000)
Writing segment __DATA           @ 0x660000 (  0x3fa4/  0x3fa8 @ 0x1012fc000)
Writing segment __DATA           @ 0x664000 ( 0x654cd/ 0xfc000 @ 0x101500000)
Writing segment __DATA           @ 0x6ca000 (  0x3fa4/  0x3fa8 @ 0x1015fc000)
Writing segment __DATA           @ 0x6ce000 (  0x61f5/ 0xfc000 @ 0x101600000)
Writing segment __DATA           @ 0x6d5000 (  0x3fa4/  0x3fa8 @ 0x1016fc000)
Writing segment __DATA           @ 0x6d9000 (  0x1b4d/ 0xfc000 @ 0x101700000)
Writing segment __DATA           @ 0x6db000 (  0x3fa4/  0x3fa8 @ 0x1017fc000)
Writing segment __DATA           @ 0x6df000 (0x3f6bfd/0x7f7000 @ 0x102000000)
Writing segment __DATA           @ 0xad6000 (  0x4d90/  0x8d9e @ 0x1027f7000)
Writing segment __DATA           @ 0xadb000 (0x3578c1/0x7f7000 @ 0x102800000)
Writing segment __DATA           @ 0xe33000 (  0x43aa/  0x8d9e @ 0x102ff7000)
Writing segment __DATA           @ 0xe38000 ( 0x80a05/0x7f7000 @ 0x103000000)
Writing segment __DATA           @ 0xeb9000 (  0x162e/  0x8d9e @ 0x1037f7000)
Writing segment __DATA           @ 0xebb000 ( 0x4fcda/0x7f7000 @ 0x104800000)
Writing segment __DATA           @ 0xf0b000 (  0x1320/  0x8d9e @ 0x104ff7000)
Writing segment __LINKEDIT       @ 0xf0d000 ( 0xbe870/ 0xbf000 @ 0x100580000)
Writing LC_DYLD_INFO_ONLY command
Writing LC_SYMTAB command
Writing LC_DYSYMTAB command
Writing LC_LOAD_DYLINKER  command
Writing LC_UUID           command
Writing LC_VERSION_MIN_MACOSX command
Writing LC_SOURCE_VERSION command
Writing LC_MAIN           command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_FUNCTION_STARTS command
Writing LC_DATA_IN_CODE   command
2272 unused bytes follow Mach-O header
cd ../lisp; /Library/Developer/CommandLineTools/usr/bin/make  compile-first EMACS=/Users/burtonsamograd/emacs-jit/emacs-profile-git/src/bootstrap-emacs
make[2]: Nothing to be done for `compile-first'.
cd ../leim && /Library/Developer/CommandLineTools/usr/bin/make  leim-list.el EMACS=/Users/burtonsamograd/emacs-jit/emacs-profile-git/src/bootstrap-emacs
if test "no" = "yes"; then \
	  rm -f emacs; \
	  ln temacs emacs; \
	else \
	  LC_ALL=C `/bin/pwd`/temacs -batch -l loadup dump || exit 1; \
	  test "X" = X ||  -zex emacs; \
	  rm -f bootstrap-emacs; \
	  ln emacs bootstrap-emacs; \
	fi
Loading loadup.el (source)...
Using load-path (/Users/burtonsamograd/emacs-jit/emacs-profile-git/lisp)
Loading emacs-lisp/byte-run...
Loading emacs-lisp/backquote...
Loading subr...
Loading version...
Loading widget...
Loading custom...
Loading emacs-lisp/map-ynp...
Loading international/mule...
Loading international/mule-conf...
Loading env...
Loading format...
Loading bindings...
Loading cus-start...
Loading window...
Loading files...
Loading emacs-lisp/macroexp...
Loading cus-face...
Loading faces...
Loading button...
Loading startup...
Loading loaddefs.el (source)...
Loading minibuffer...
Loading abbrev...
Loading simple...
Loading help...
Loading jka-cmpr-hook...
Loading epa-hook...
Loading international/mule-cmds...
Loading case-table...
Loading international/charprop.el (source)...
Loading international/characters...
Loading composite...
Loading language/chinese...
Loading language/cyrillic...
Loading language/indian...
Loading language/sinhala...
Loading language/english...
Loading language/ethiopic...
Loading language/european...
Loading language/czech...
Loading language/slovak...
Loading language/romanian...
Loading language/greek...
Loading language/hebrew...
Loading language/japanese...
Loading international/cp51932.el (source)...
Loading international/eucjp-ms.el (source)...
Loading language/korean...
Loading language/lao...
Loading language/tai-viet...
Loading language/thai...
Loading language/tibetan...
Loading language/vietnamese...
Loading language/misc-lang...
Loading language/utf-8-lang...
Loading language/georgian...
Loading language/khmer...
Loading language/burmese...
Loading language/cham...
Loading indent...
Loading frame...
Loading term/tty-colors...
Loading font-core...
Loading facemenu...
Loading emacs-lisp/syntax...
Loading font-lock...
Loading jit-lock...
Loading mouse...
Loading scroll-bar...
Loading select...
Loading emacs-lisp/timer...
Loading isearch...
Loading rfn-eshadow...
Loading menu-bar...
Loading emacs-lisp/lisp...
Loading textmodes/page...
Loading register...
Loading textmodes/paragraphs...
Loading emacs-lisp/lisp-mode...
Loading textmodes/text-mode...
Loading textmodes/fill...
Loading newcomment...
Loading replace...
Loading emacs-lisp/tabulated-list...
Loading buff-menu...
Loading fringe...
Loading emacs-lisp/regexp-opt...
Loading image...
Loading international/fontset...
Loading dnd...
Loading tool-bar...
Loading term/common-win...
Loading term/ns-win...
Loading mwheel...
Loading emacs-lisp/float-sup...
Loading vc/vc-hooks...
Loading vc/ediff-hook...
Loading tooltip...
Finding pointers to doc strings...
Finding pointers to doc strings...done
Pure-hashed: 21648 strings, 3097 vectors, 35269 conses, 2807 bytecodes, 82 others
Dumping under the name emacs
--- List of All Regions ---
   address     size prot maxp
--- List of Regions to be Dumped ---
   address     size prot maxp
--- Header Information ---
Magic = 0xfeedfacf
CPUType = 16777223
CPUSubType = -2147483645
FileType = 0x2
NCmds = 33
SizeOfCmds = 4216
Flags = 0x00000085
Highest address of load commands in input file: 0x10063f000
Lowest offset of all sections in __TEXT segment:   0x1e40
--- List of Load Commands in Input File ---
# cmd              cmdsize name                address     size
0 LC_SEGMENT_64          72 __PAGEZERO                0 0x100000000
1 LC_SEGMENT_64         872 __TEXT           0x100000000 0x1e4000
                           __text           0x100001e40 0x1c41a0
                           __stubs          0x1001c5fe0    0x7fe
                           __stub_helper    0x1001c67e0    0xd62
                           __const          0x1001c7550   0x1484
                           __cstring        0x1001c89e0  0x14ea3
                           __objc_methname  0x1001dd883   0x31a6
                           __objc_classname 0x1001e0a29    0x11f
                           __objc_methtype  0x1001e0b48   0x1418
                           __gcc_except_tab 0x1001e1f60     0x4c
                           __unwind_info    0x1001e1fac   0x204c
2 LC_SEGMENT_64        1432 __DATA           0x1001e4000 0x39c000
                           __nl_symbol_ptr  0x1001e4000     0x10
                           __got            0x1001e4010    0x1f0
                           __la_symbol_ptr  0x1001e4200    0xaa8
                           __const          0x1001e4cb0   0x3588
                           __cfstring       0x1001e8238    0x660
                           __objc_classlist 0x1001e8898     0x78
                           __objc_protolist 0x1001e8910     0x30
                           __objc_imageinfo 0x1001e8940      0x8
                           __objc_const     0x1001e8948   0x3a48
                           __objc_selrefs   0x1001ec390    0xf18
                           __objc_classrefs 0x1001ed2a8    0x1f0
                           __objc_superrefs 0x1001ed498     0x60
                           __objc_ivar      0x1001ed4f8    0x1f8
                           __objc_data      0x1001ed6f0    0x4b0
                           __data           0x1001edba0 0x317138
                           __common         0x100504ce0   0x41e1
                           __bss            0x100508ed0  0x76990
3 LC_SEGMENT_64          72 __LINKEDIT       0x100580000  0xbf000
4 LC_DYLD_INFO_ONLY      48
5 LC_SYMTAB              24
6 LC_DYSYMTAB            80
7 LC_LOAD_DYLINKER       32
8 LC_UUID                24
9 LC_VERSION_MIN_MACOSX      16
10 LC_SOURCE_VERSION      16
11 LC_MAIN                24
12 LC_LOAD_DYLIB          88
13 LC_LOAD_DYLIB          72
14 LC_LOAD_DYLIB          56
15 LC_LOAD_DYLIB          72
16 LC_LOAD_DYLIB          80
17 LC_LOAD_DYLIB          72
18 LC_LOAD_DYLIB          72
19 LC_LOAD_DYLIB          72
20 LC_LOAD_DYLIB          72
21 LC_LOAD_DYLIB          56
22 LC_LOAD_DYLIB          56
23 LC_LOAD_DYLIB          56
24 LC_LOAD_DYLIB          72
25 LC_LOAD_DYLIB         112
26 LC_LOAD_DYLIB         104
27 LC_LOAD_DYLIB         104
28 LC_LOAD_DYLIB         104
29 LC_LOAD_DYLIB          96
30 LC_LOAD_DYLIB          56
31 LC_FUNCTION_STARTS      16
32 LC_DATA_IN_CODE        16
0x1030fc080 (sz:   0x3f24/  0x3f28)
0x103000000 (sz:   0x5e0f/ 0xfc080)
0x1012fc080 (sz:   0x3f24/  0x3f28)
0x101200000 (sz:  0x32e85/ 0xfc080)
0x1017fc080 (sz:   0x3f24/  0x3f28)
0x101700000 (sz:   0xbc25/ 0xfc080)
0x1031fc080 (sz:   0x3f24/  0x3f28)
0x103100000 (sz:  0x2f4ff/ 0xfc080)
0x1047f7e00 (sz:    0x1e2/  0x7f9e)
0x104000000 (sz:  0x1be00/0x7f7e00)
0x102ff7e00 (sz:    0x8b8/  0x7f9e)
0x102800000 (sz:  0x89405/0x7f7e00)
0x1027f7e00 (sz:   0x24f4/  0x7f9e)
0x102000000 (sz: 0x24cfeb/0x7f7e00)
0x104ff7e00 (sz:   0x20c6/  0x7f9e)
0x104800000 (sz: 0x20a1f9/0x7f7e00)
0x100ff3000 (sz:        0/  0x1000)
--- Load Commands written to Output File ---
Writing segment __PAGEZERO       @        0 (       0/0x100000000 @       2449879 pure bytes used
Adding name emacs-24.3.50.2
   0)
Writing segment __TEXT           @        0 (0x1e4000/0x1e4000 @ 0x100000000)
Writing segment __DATA           @ 0x1e4000 (0x39c000/0x39c000 @ 0x1001e4000)
        section __nl_symbol_ptr  at 0x1e4000 - 0x1e4010 (sz:     0x10)
        section __got            at 0x1e4010 - 0x1e4200 (sz:    0x1f0)
        section __la_symbol_ptr  at 0x1e4200 - 0x1e4ca8 (sz:    0xaa8)
        section __const          at 0x1e4cb0 - 0x1e8238 (sz:   0x3588)
        section __cfstring       at 0x1e8238 - 0x1e8898 (sz:    0x660)
        section __objc_classlist at 0x1e8898 - 0x1e8910 (sz:     0x78)
        section __objc_protolist at 0x1e8910 - 0x1e8940 (sz:     0x30)
        section __objc_imageinfo at 0x1e8940 - 0x1e8948 (sz:      0x8)
        section __objc_const     at 0x1e8948 - 0x1ec390 (sz:   0x3a48)
        section __objc_selrefs   at 0x1ec390 - 0x1ed2a8 (sz:    0xf18)
        section __objc_classrefs at 0x1ed2a8 - 0x1ed498 (sz:    0x1f0)
        section __objc_superrefs at 0x1ed498 - 0x1ed4f8 (sz:     0x60)
        section __objc_ivar      at 0x1ed4f8 - 0x1ed6f0 (sz:    0x1f8)
        section __objc_data      at 0x1ed6f0 - 0x1edba0 (sz:    0x4b0)
        section __data           at 0x1edba0 - 0x504cd8 (sz: 0x317138)
        section __common         at 0x504ce0 - 0x508ec1 (sz:   0x41e1)
        section __bss            at 0x508ed0 - 0x57f860 (sz:  0x76990)
Writing segment __DATA           @ 0x580000 (       0/  0x1000 @ 0x100ff3000)
Writing segment __DATA           @ 0x580000 ( 0x32e85/ 0xfc000 @ 0x101200000)
Writing segment __DATA           @ 0x5b3000 (  0x3fa4/  0x3fa8 @ 0x1012fc000)
Writing segment __DATA           @ 0x5b7000 (  0xbc25/ 0xfc000 @ 0x101700000)
Writing segment __DATA           @ 0x5c3000 (  0x3fa4/  0x3fa8 @ 0x1017fc000)
Writing segment __DATA           @ 0x5c7000 (0x24cfeb/0x7f7000 @ 0x102000000)
Writing segment __DATA           @ 0x814000 (  0x32f4/  0x8d9e @ 0x1027f7000)
Writing segment __DATA           @ 0x818000 ( 0x89405/0x7f7000 @ 0x102800000)
Writing segment __DATA           @ 0x8a2000 (  0x16b8/  0x8d9e @ 0x102ff7000)
Writing segment __DATA           @ 0x8a4000 (  0x5e0f/ 0xfc000 @ 0x103000000)
Writing segment __DATA           @ 0x8aa000 (  0x3fa4/  0x3fa8 @ 0x1030fc000)
Writing segment __DATA           @ 0x8ae000 ( 0x2f4ff/ 0xfc000 @ 0x103100000)
Writing segment __DATA           @ 0x8de000 (  0x3fa4/  0x3fa8 @ 0x1031fc000)
Writing segment __DATA           @ 0x8e2000 ( 0x1be00/0x7f7000 @ 0x104000000)
Writing segment __DATA           @ 0x8fe000 (   0xfe2/  0x8d9e @ 0x1047f7000)
Writing segment __DATA           @ 0x8ff000 (0x20a1f9/0x7f7000 @ 0x104800000)
Writing segment __DATA           @ 0xb0a000 (  0x2ec6/  0x8d9e @ 0x104ff7000)
Writing segment __LINKEDIT       @ 0xb0d000 ( 0xbe870/ 0xbf000 @ 0x100580000)
Writing LC_DYLD_INFO_ONLY command
Writing LC_SYMTAB command
Writing LC_DYSYMTAB command
Writing LC_LOAD_DYLINKER  command
Writing LC_UUID           command
Writing LC_VERSION_MIN_MACOSX command
Writing LC_SOURCE_VERSION command
Writing LC_MAIN           command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_LOAD_DYLIB     command
Writing LC_FUNCTION_STARTS command
Writing LC_DATA_IN_CODE   command
2272 unused bytes follow Mach-O header
cd ../nextstep && /Library/Developer/CommandLineTools/usr/bin/make  all
../build-aux/install-sh -c -d /Users/burtonsamograd/emacs-jit/emacs-profile-git/nextstep/Emacs.app/Contents/MacOS
cp -f ../src/emacs /Users/burtonsamograd/emacs-jit/emacs-profile-git/nextstep/Emacs.app/Contents/MacOS/Emacs
cd lisp && /Library/Developer/CommandLineTools/usr/bin/make all                          \
	  CC='gcc' CFLAGS='-g3 -O2' CPPFLAGS='' \
	  LDFLAGS='' MAKE='/Library/Developer/CommandLineTools/usr/bin/make'
Compiling raytracer.el

In toplevel form:
raytracer.el:1:1:Warning: cl package required at runtime

In end of data:
raytracer.el:169:1:Warning: the function `jit' is not known to be defined.
Wrote /Users/burtonsamograd/emacs-jit/emacs-profile-git/lisp/raytracer.elc
cd leim && /Library/Developer/CommandLineTools/usr/bin/make all                          \
	  CC='gcc' CFLAGS='-g3 -O2' CPPFLAGS='' \
	  LDFLAGS='' MAKE='/Library/Developer/CommandLineTools/usr/bin/make'
